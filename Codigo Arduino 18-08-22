#include <ArduinoJson.h>
#include "SerialTransfer.h"
// Progrma para la <expo 2022
int arr_Param[2]; //ARREGLO QUE MANEJA EL VALOR DE TENSION INICIAL Y UN
// VALOR 1 DE START 0 DE STOP
SerialTransfer myTransfer;
char Labels[5][6] = {"100-1", "101-1", "102-0", "103-0", "104-0"};
long test_started = false;
bool led_state = true;


//Variables globales
unsigned long t_temp = 0;
unsigned long t_print = 0;
unsigned long Tini;
float convt = 3.3 / 4095;

// Contadores
int i;
// Corrientes
int m = 1024;
int I1_read[1024];
int I2_read[1024];
int I3_read[1024];
//
float I1 = 0.0;
float I2 = 0.0;
float I3 = 0.0;
//
float max_i1 = 0.0;
float max_i2 = 0.0;
float max_i3 = 0.0;

// Filtro de corrientes
// Variables Filtro de Corriente
float xI1[2] = {0, 0};
float yI1[2] = {0, 0};
float xI2[2] = {0, 0};
float yI2[2] = {0, 0};
float xI3[2] = {0, 0};
float yI3[2] = {0, 0};
// Ema
float EMA_I1 = 0.0;
float EMA_I2 = 0.0;
float EMA_I3 = 0.0;
float alpha1 = 0.05;
// Tensiones
int V1_read[1024];
int V2_read[1024];
int V3_read[1024];
//
float V1 = 0.0;
float V2 = 0.0;
float V3 = 0.0;
//
float max_v1 = 0.0;
float max_v2 = 0.0;
float max_v3 = 0.0;
//
float aux1 = 0;
// Variables Filtro de Tensión
float xV1[2] = {0, 0};
float yV1[2] = {0, 0};
float xV2[2] = {0, 0};
float yV2[2] = {0, 0};
float xV3[2] = {0, 0};
float yV3[2] = {0, 0};
// Coeficiente 100HZ
float a[3] = {0.01925927420234,  0.01925927420234, 0};
float b[3] = {1, -0.9614814515953, 0};
//Variables de lectura
int T1_read = 0;
int T2_read = 0;
int T3_read = 0;
int T4_read = 0;
int T5_read = 0;
int T6_read = 0;
//Vibraciones
int Vib1_read[1024];
int Vib2_read[1024];
//
float Vib1 = 0.0;
float Vib2 = 0.0;
//
float suma = 0.0;
// Variables de temperatura
float T1 = 0;
float T2 = 0;
float T3 = 0;
float T4 = 0;
float T5 = 0;
float T6 = 0;
//Filtro de temperatura
float alpha = 0.2543;
float EMA_T1 = 0;
float EMA_T2 = 0;
float EMA_T3 = 0;
float EMA_T4 = 0;
float EMA_T5 = 0;
float EMA_T6 = 0;
// RPM
int Fin_read = 0;
float RPM = 0;
// Filtro de Fin
float EMA_f = 0;
float ema_f = 0;
float alpha_f1 = 0.2;
float alpha_f = 0.05;
float xF[3] = {0, 0, 0};
float yF[3] = {0, 0, 0};
float c[3] = { 0.09999, 0.09999, 0};
float d[3] = {1, -0.09997616776824, 0};

//
float r2 = 1.414213562;
struct __attribute__((__packed__)) STRUCT {
  long recieve_id;
  long potentiometer_value;
  float value;
  char label[6];
} workingstruct;

float rms(float *x, int m) {
  float average = 0.0;
  float suma_1 = 0.0;
  float suma_2 = 0.0;
  float rms = 0.0;
  for (int i = 0; i < m; i++) {
    suma_1 += x[i];
  }
  average = suma_1 / m;
  for (int i = 0; i < m; i++) {
    x[i] = x[i] - average;
    suma_2 += x[i] * x[i];
  }
  rms = sqrt(suma / m - 1);
  return rms;
}

void setup() {

  Serial.begin(115200);
  myTransfer.begin(Serial);
  analogReadResolution(12);
  //
  pinMode(13, OUTPUT);
  //
  t_temp = millis();
  t_print = millis();
  Tini = millis();
}

void loop() {

  if (myTransfer.available()) {
    // Receive buffer
    uint16_t recSize = 0;
    recSize = myTransfer.rxObj(arr_Param, recSize);
    pinMode(13, OUTPUT);
    pinMode(2, OUTPUT);
  }
  // Lecturas de Tensión+Corriente+Vibracion
  digitalWrite(2, HIGH);
  for (i = 0; i < m; i++) {
    I1_read[i] = analogRead(A0) - 2048;
    I2_read[i] = analogRead(A1) - 2028;
    I3_read[i] = analogRead(A2) - 2018;
    V1_read[i] = analogRead(A3) - 2048 ;
    V2_read[i] = analogRead(A4) - 2048 ;
    V3_read[i] = analogRead(A5) - 2048 ;
    Vib1_read[i] = analogRead(A7) - 1960; //- 2189 ;
    Vib2_read[i] = analogRead(A8) - 2139 ;
  }
  digitalWrite(2, LOW);
  // RPM
  Fin_read =  37.28 * convt * analogRead(A6);
  ema_f = alpha_f1 * Fin_read   + (1 - alpha_f1) * ema_f;
  //
  EMA_f = alpha_f * ema_f   + (1 - alpha_f) * EMA_f;//
  RPM = 60.05 * EMA_f;
  //  // Impresión
  if (millis() - t_print > 10) {
    Serial.print(Fin_read);
    Serial.print("  ");
     Serial.print(ema_f);
    Serial.print("  ");
    Serial.println(EMA_f);
    t_print = millis();
  }

  // Filtrado de Tesnión.
  max_v1 = 0.0;
  max_v2 = 0.0;
  max_v3 = 0.0;
  for (i = 0; i < m; i++) {
    //V1
    xV1[0] = V1_read[i] * convt * 927 ;
    yV1[0] = a[0] * xV1[0] + a[1] * xV1[1] - b[1] * yV1[1];
    xV1[1] = xV1[0];
    yV1[1] = yV1[0];
    // V2
    xV2[0] = V2_read[i] * convt * 927 ;
    yV2[0] = a[0] * xV2[0] + a[1] * xV2[1] - b[1] * yV2[1];
    xV2[1] = xV2[0];
    yV2[1] = yV2[0];
    // V3
    xV3[0] = V3_read[i] * convt * 927 ;
    yV3[0] = a[0] * xV3[0] + a[1] * xV3[1] - b[1] * yV3[1];
    xV3[1] = xV3[0];
    yV3[1] = yV3[0];

    //Calculo del Máximo;
    if (yV1[0] > max_v1) {
      max_v1 = yV1[0];
    }
    if (yV2[0] > max_v2) {
      max_v2 = yV2[0];
    }
    if (yV3[0] > max_v3) {
      max_v3 = yV3[0];
    }
    //    //
    //Impresión de tensión
    //    Serial.print(yV1[0]);
    //    Serial.print(" ");
    //    Serial.print(yV2[0]);
    //    Serial.print(" ");
    //    Serial.println(yV3[0] );
    //    delay(10);
  }

  // Calculo del rms
  V1 = max_v1 / r2;
  V2 = max_v2 / r2;
  V3 = max_v3 / r2;
  // Filtrado de Corrientes.
  max_i1 = 0.0;
  max_i2 = 0.0;
  max_i3 = 0.0;
  for (i = 0; i < m; i++) {
    //I1
    xI1[0] = I1_read[i] * convt * 4400; //981*3.2 ;
    yI1[0] = a[0] * xI1[0] + a[1] * xI1[1] - b[1] * yI1[1];
    xI1[1] = xI1[0];
    yI1[1] = yI1[0];
    // V2
    xI2[0] = I2_read[i] * convt * 4400; // 981*3.2;
    yI2[0] = a[0] * xI2[0] + a[1] * xI2[1] - b[1] * yI2[1];
    xI2[1] = xI2[0];
    yI2[1] = yI2[0];
    // V3
    xI3[0] = I3_read[i] * convt * 3633; // 981*2.3 ;
    yI3[0] = a[0] * xI3[0] + a[1] * xI3[1] - b[1] * yI3[1];
    xI3[1] = xI3[0];
    yI3[1] = yI3[0];
    //
    EMA_I1 = alpha1 * yI1[0] + (1 - alpha) * EMA_I1;
    EMA_I2 = alpha1 * yI2[0] + (1 - alpha) * EMA_I2;
    EMA_I3 = alpha1 * yI3[0] + (1 - alpha) * EMA_I3;
    //Calculo del Máximo;
    if (EMA_I1 > max_i1) {
      max_i1 = EMA_I1;
    }
    if (EMA_I2 > max_i2) {
      max_i2 = EMA_I2;
    }
    if (EMA_I3 > max_i3) {
      max_i3 = EMA_I3;
    }
    //
    //    // Impresión de tensión
    //    Serial.print(yI1[0]);
    //    Serial.print(" ");
    //    Serial.print(yI2[0]);
    //    Serial.print(" ");
    //    Serial.println(yI3[0] );
    //    delay(10);
  }
  // Calculo del rms
  I1 = max_i1 / r2;
  I2 = max_i2 / r2;
  I3 = max_i3 / r2;
  //  //  //Impresión de vibración
  //        Serial.print(I1);
  //        Serial.print("   ");
  //        Serial.print(I2);
  //        Serial.print("   ");
  //        Serial.println(I3);
  //        delay(10);
  //  //

  //Lectura de Temepraturas.
  if (millis() - t_temp > 55) {
    t_temp = millis();
    T1_read = analogRead(A10);
    T2_read = analogRead(A11);
    T3_read = analogRead(A12);
    T4_read = analogRead(A13);
    T5_read = analogRead(A14);
    T6_read = analogRead(A15);
    EMA_T1 = alpha * T1_read * convt + (1 - alpha) * EMA_T1;
    EMA_T2 = alpha * T2_read * convt + (1 - alpha) * EMA_T2;
    EMA_T3 = alpha * T3_read * convt + (1 - alpha) * EMA_T3;
    EMA_T4 = alpha * T4_read * convt + (1 - alpha) * EMA_T4;
    EMA_T5 = alpha * T5_read * convt + (1 - alpha) * EMA_T5;
    EMA_T6 = alpha * T6_read * convt + (1 - alpha) * EMA_T6;
  }

  //Temperatura.
  T1 = 2.05 * EMA_T1 * EMA_T1 + 58.51 * EMA_T1 - 1.052;
  T2 = 2.05 * EMA_T2 * EMA_T2 + 58.51 * EMA_T2 - 1.052;
  T3 = 2.05 * EMA_T3 * EMA_T3 + 58.51 * EMA_T3 - 1.052;
  T4 = 2.05 * EMA_T4 * EMA_T4 + 58.51 * EMA_T4 - 1.052;
  T5 = 2.05 * EMA_T5 * EMA_T5 + 58.51 * EMA_T5 - 1.052;
  T6 = 2.05 * EMA_T6 * EMA_T6 + 58.51 * EMA_T6 - 1.052;
  // Calcluo RMS vibración;
  suma = 0;
  for (i = 0; i < 1024; i++) {
    aux1 = Vib1_read[i] * convt * 143;
    suma = aux1 * aux1;
  }
  Vib1 = sqrt(suma / 1023);
  //  //Impresión de vibración
  //    for (i = 0; i < m; i++) {
  //      Serial.println(suma);
  //      delay(10);
  //    }
  //
  suma = 0;
  for (i = 0; i < 1024; i++) {
    aux1 = Vib2_read[i] * convt * 143;
    suma = aux1 * aux1;
  }
  Vib2 = sqrt(suma / 1023) ;
  //  //Impresión de vibración
  //  for (i = 0; i < m; i++) {
  //    Serial.println(Vib1_read[i]);
  //    delay(10);
  //  }
  //
  // Transmisión de datos
if (arr_Param[0] == 1) {
    digitalWrite(13, HIGH);
    if (millis() - Tini > 400) {
      // Set data POTENCIOMETRO
      workingstruct.recieve_id = 1;
      if (digitalRead(2) == LOW) aux1 = 0;
      workingstruct.potentiometer_value = T1;
      //      workingstruct.potentiometer_value = arr_Param[1];
      //
      // T1
      workingstruct.value = float(T1); // Temperatura 1.
      strcpy(workingstruct.label, "100-1");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // T2
      workingstruct.value = float(T2); // Temperatura 2.
      strcpy(workingstruct.label, "101-1");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // T3
      workingstruct.value = float(T3);
      strcpy(workingstruct.label, "102-1");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // T4
      workingstruct.value = float(T4);
      strcpy(workingstruct.label, "103-1");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // T5
      workingstruct.value = float(T5);
      strcpy(workingstruct.label, "104-1");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // T6
      workingstruct.value = float(T6);
      strcpy(workingstruct.label, "105-1");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      Tini = millis();
      //
      // I1
      workingstruct.value = float(I1);
      strcpy(workingstruct.label, "200-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // I2
      workingstruct.value = float(I2);
      strcpy(workingstruct.label, "201-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // I3
      workingstruct.value = float(I1);
      strcpy(workingstruct.label, "202-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // V1
      workingstruct.value = float(V1);
      strcpy(workingstruct.label, "300-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // V2
      workingstruct.value = float(V2);
      strcpy(workingstruct.label, "301-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // V3
      workingstruct.value = float(V1);
      strcpy(workingstruct.label, "302-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      // RPM
      workingstruct.value = float(RPM);
      strcpy(workingstruct.label, "400-0");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      //
      //  Vibración 1
      workingstruct.value = float(Vib1);
      strcpy(workingstruct.label, "500-2");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;

      //   Vibración 2
      workingstruct.value = float(Vib2);
      strcpy(workingstruct.label, "501-2");
      //
      myTransfer.sendDatum(workingstruct);
      workingstruct.recieve_id += 1;
      digitalWrite(13, LOW);
    }
  } else {

    //digitalWrite(13, LOW);
  }

  // Impresión de temperatura monitor serie
  //      if (millis() - t_print > 500) {
  //        Serial.print("T1=" + String(T1));
  //        Serial.print("  ");
  //        Serial.print("T2=" + String(T2));
  //        Serial.print("  ");
  //        Serial.print("T3=" + String(T3));
  //        Serial.print("  ");
  //        Serial.print("T4=" + String(T4));
  //        Serial.print("  ");
  //        Serial.print("T5=" + String(T5));
  //        Serial.print("  ");
  //        Serial.println("T6=" + String(T6));
  //        Serial.println("  ");
  //        //
  //        Serial.print("I1=" + String(I1));
  //        Serial.print("  ");
  //        Serial.print("I2=" + String(I2));
  //        Serial.print("  ");
  //        Serial.print("I3=" + String(I3));
  //        Serial.print("  ");
  //        //
  //        Serial.print("V1=" + String(V1));
  //        Serial.print("  ");
  //        Serial.print("V2=" + String(V2));
  //        Serial.print("  ");
  //        Serial.println("V3=" + String(V3));
  //        Serial.println("  ");
  //        //
  //        Serial.print("RPM=" + String(RPM));
  //        Serial.print("  ");
  //        Serial.print("Vib1=" + String(Vib1 * 1000));
  //        Serial.print("  ");
  //        Serial.println("Vib2=" + String(Vib2 * 1000));
  //        Serial.println("  ");
  //        t_print = millis();
  //      }

}
